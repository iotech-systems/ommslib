#!/usr/bin/env python3

import sys, time
import minimalmodbus as mm


if len(sys.argv) == 1:
   print("\n\t./scanbus ttyDevice address-range baudrate parity timeout")
   print("\tie: ./scanbus /dev/ttyUSB1 10~20 9600 E 0.8 reg\n")
   exit(0)

ttydev = sys.argv[1]
if "~" not in sys.argv[2]:
   print(f"\n\tbad input: {sys.argv[2]} -> should be X~X+n for n addresses\n")
   exit(1)
# -- run --
adrange = sys.argv[2].strip().split("~")
brate = int(sys.argv[3])
tmp = sys.argv[4].upper()
if not tmp.isalpha() and tmp not in ["E", "N", "O"]:
   print(f"n\tBadParityInput: {tmp}\n")
   sys.exit(1)
# -- run --
parity = sys.argv[4].upper()
timeout = float(sys.argv[5])
reg = int(sys.argv[6])

inst = mm.Instrument(ttydev, 1)
inst.serial.baudrate = brate
inst.serial.parity = parity
inst.serial.timeout = timeout
inst.debug = False


def main():
   print("\n starting scan for serial_ports: %s to %s\n" % tuple(adrange))
   counter: int = 0
   start, end = [int(x) for x in adrange]
   # - - - -
   for i in range(start, end):
      try:
         time.sleep(0.48)
         print(f"\tscanning modbus address: {i} -> ", end="")
         inst.address = i
         val = inst.read_register(reg)
         if val == i:
            counter += 1
         print(f" + response: {val}")
      except:
         print(" - no response!")
   # - - - -
   print("\n\tScan Complete!")
   print(f"\t - ttyDev: {ttydev}")
   print(f"\t - modbus address space: {start} ~ {end}")
   print(f"\t - found: {counter}\n")


# - - - - - - - - - - - - - - - - - - - - - - - - -
if __name__ == "__main__":
    main()
