#!/usr/bin/env python3

import os, sys, time
import minimalmodbus as mm
import appbin.utils as uts


OMMS_DEFAULT_ROOT = "/opt/iotech/omms"
OMMS_ROOT = os.getenv("OMMS_ROOT")
if (OMMS_ROOT is None) and os.path.exists(OMMS_DEFAULT_ROOT):
   OMMS_ROOT = OMMS_DEFAULT_ROOT
else:
   print(f"-- NOT_FOUND_OMMS_ROOT: [{OMMS_DEFAULT_ROOT}] --")
   print(" run > export OMMS_ROOT")
   exit(1)

# -- set meter info --
OMMS_METER = os.getenv("OMMS_METER")
BDR, PAR, BITS, TOUT, ADR = uts.get_omms_meter_info()

INFO = f"""
   env ~ OMMS_ROOT: {OMMS_ROOT}
   env ~ OMMS_METER: {OMMS_METER}
   SERIAL INFO: {BDR}; {PAR}; {BITS}; {TOUT}; mb_adr: {ADR};
   ./chngadr ttyUSBx oldAddress newAddress\n
"""

if len(sys.argv) != 4:
   print(INFO)
   exit(0)


ttydev = f"/dev/{str(sys.argv[1])}"
adrold = int(sys.argv[2])
adrnew = int(sys.argv[3])

inst = mm.Instrument(ttydev, 1)
inst.serial.baudrate = BDR
inst.serial.parity = PAR
inst.serial.timeout = TOUT
inst.debug = True


def main():
   try:
      inst.address = adrold
      inst.write_register(ADR, adrnew)
      time.sleep(1.0)
      val = inst.read_register(ADR)
      print(f"new adr: {val}")
   except Exception as e:
      print(e)


# - - - - - - - - - - - - - - - - - - - - - - - - -
if __name__ == "__main__":
    main()
